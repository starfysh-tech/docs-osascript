{
  "collection": "applescript-language-guide",
  "path": "reference/ASLR_folder_actions.md",
  "title": "Folder Actions Reference",
  "body": "<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW2\"></a>\n\n# Folder Actions Reference\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_919\"></a>Folder Actions is a feature of macOS that lets you associate AppleScript scripts with folders. A Folder Action script is executed when the folder to which it is attached has items added or removed, or when its window is opened, closed, moved, or resized. The script provides a handler that matches the appropriate format for the action, as described in this chapter.\n\nFolder Actions make it easy to create hot folders that respond to external actions to trigger a workflow. For example, you can use a Folder Action script to initiate automated processing of any photo dropped in a targeted folder. A well written Folder Action script leaves the hot folder empty. This avoids repeated application of the action to the same files, and allows Folder Actions to perform more efficiently.\n\nYou can Control-click a folder to access some Folder Action features with the contextual menu in the Finder. Or you can use the Folder Actions Setup application, located in `/System/Library/CoreServices`. This application lets you perform tasks such as the following:\n\n* Enable or disable Folder Actions.\n* View the folders that currently have associated scripts\n* View and edit the script associated with a folder.\n* Add folders to or remove folders from the list of folders.\n* Associate one or more scripts with a folder.\n* Enable or disable all scripts associated with a folder.\n* Enable or disable individual scripts associated with a folder.\n* Remove scripts associated with a folder.\n\nFolder Actions Setup looks for scripts located in `/Library/Scripts/Folder Action Scripts` and `~/Library/Scripts/Folder Action Scripts`. You can use the sample scripts located in `/Library/Scripts/Folder Action Scripts` or any scripts you have added to these locations, or you can navigate to other scripts.\n\nA Folder Action script provides a handler (see [Handler Reference](ASLR_handlers.md#//apple_ref/doc/uid/TP40000983-CH7g-163762)) that is invoked when the specified action takes place. When working with Folder Action handlers, keep in mind that:\n\n* You do not invoke Folder Actions directly. Instead, when a triggering action takes place on a folder, the associated handler is invoked automatically.\n* When a Folder Action handler is invoked, none of the parameters is optional.\n* A Folder Action handler does not return a value.\n\nHere’s how you can use a Folder Action script to perform a specific action whenever an image file is dropped on a specific image folder:\n\n1. Create a script with Script Editor or another script application.\n2. In that script, write a handler that conforms to the syntax documented here for the `adding folder items to` folder action. Your handler can use the aliases that are passed to it to access the image files dropped on the folder.\n3. Save the script as a compiled script or script bundle.\n4. Put a copy of the script in `/Library/Scripts/Folder Action Scripts` or `~/Library/Scripts/Folder Action Scripts`.\n5. Use the Folder Actions Setup application, located in `/Applications/AppleScript`, to:\n\n   1. Enable folder actions for your image folder.\n   2. Add a script to that folder, choosing the script you created.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW48\"></a>\n\nadding folder items to\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_920\"></a>A script handler that is invoked after items are added to its associated folder.\n\n##### Syntax\n\n|  |\n| --- |\n| ``` on adding folder items to alias after receiving listOfAlias  [ statement ]... end [ adding folder items to ]  ``` |\n\n##### Placeholders\n\n*alias*\n:   An `alias` that identifies the folder that received the items.\n\n*listOfAlias*\n:   List of aliases that identify the items added to the folder.\n\n*statement*\n:   Any AppleScript statement.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_203\"></a>\n\n##### Examples\n\nThe following Folder Action handler is triggered when items are added to the folder to which it is attached. It makes an archived copy, in ZIP format, of the individual items added to the attached folder. Archived files are placed in a folder named `Done` within the attached folder.\n\n```\n \non adding folder items to this_folder after receiving these_items\n    tell application \"Finder\"\n        if not (exists folder \"Done\" of this_folder) then\n            make new folder at this_folder with properties {name:\"Done\"}\n        end if\n        set the destination_folder to folder \"Done\" of this_folder as alias\n        set the destination_directory to POSIX path of the destination_folder\n    end tell\n    repeat with i from 1 to number of items in these_items\n        set this_item to item i of these_items\n        set the item_info to info for this_item\n        if this_item is not the destination_folder and ¬\n            the name extension of the item_info is not in {\"zip\", \"sit\"} then\n            set the item_path to the quoted form of the POSIX path of this_item\n            set the destination_path to the quoted form of ¬\n                (destination_directory & (name of the item_info) & \".zip\")\n            do shell script (\"/usr/bin/ditto -c -k -rsrc --keepParent \" ¬\n                & item_path & \" \" & destination_path)\n        end if\n    end repeat\nend adding folder items to\n```\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW1\"></a>\n\nclosing folder window for\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_921\"></a>A script handler that is invoked after a folder’s associated window is closed.\n\n##### Syntax\n\n|  |\n| --- |\n| ``` on closing folder window for alias  [ statement ]... end [ closing folder window for ]  ``` |\n\n##### Placeholders\n\n*alias*\n:   An `alias` that identifies the folder that was closed.\n\n*statement*\n:   Any AppleScript statement.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_204\"></a>\n\n##### Examples\n\nThe following Folder Action handler is triggered when the folder to which it is attached is closed. It closes any open windows of folders within the targeted folder.\n\n```\n-- This script is designed for use with OS X v10.2 and later.\non closing folder window for this_folder\n    tell application \"Finder\"\n        repeat with EachFolder in (get every folder of folder this_folder)\n            try\n                close window of EachFolder\n            end try\n        end repeat\n    end tell\nend closing folder window for\n```\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW50\"></a>\n\nmoving folder window for\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_922\"></a>A script handler that is invoked after a folder’s associated window is moved or resized. Not currently available.\n\n##### Syntax\n\n|  |\n| --- |\n| ``` on moving folder window for alias from bounding rectangle  [ statement ]... end [ moving folder window for ]  ``` |\n\n##### Placeholders\n\n*alias*\n:   An `alias` that identifies the folder that was moved or resized. You can use this alias to obtain the folder window’s new coordinates from the Finder.\n\n*bounding rectangle*\n:   The previous coordinates of the window of the folder that was moved or resized. The coordinates are provided as a list of four numbers, {left, top, right, bottom}; for example, {10, 50, 500, 300} for a window whose origin is near the top left of the screen (but below the menu bar, if present).\n\n*statement*\n:   Any AppleScript statement.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_205\"></a>\n\n##### Examples\n\n```\non moving folder window for this_folder from original_coordinates\n    tell application \"Finder\"\n        set this_name to the name of this_folder\n        set the bounds of the container window of this_folder ¬\n            to the original_coordinates\n    end tell\n    display dialog \"Window \\\\\"\" & this_name & \"\\\\\" has been returned to its original size and position.\" buttons {\"OK\"} default button 1\nend moving folder window for\n```\n\n##### Special Considerations\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_206\"></a>\n\n**Warning:** In OS X v10.5, and possibly in previous OS versions, Folder Actions does not activate attached `moving folder window for` scripts when the folder is moved.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW51\"></a>\n\nopening folder\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_923\"></a>A script handler that is invoked when its associated folder is opened in a window.\n\n##### Syntax\n\n|  |\n| --- |\n| ``` on opening folder alias  [ statement ]... end [ opening folder ]  ``` |\n\n##### Placeholders\n\n*alias*\n:   An `alias` that identifies the folder that was opened.\n\n*statement*\n:   Any AppleScript statement.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_207\"></a>\n\n##### Examples\n\nThe following Folder Action handler is triggered when the folder it is attached to is opened. It displays any text from the Spotlight Comments field of the targeted folder. (Prior to OS X v10.4, this script displays text from the Comments field of the specified folder.)\n\n```\n-- This script is designed for use with OS X v10.2 and later.\nproperty dialog_timeout : 30 -- set the amount of time before dialogs auto-answer.\n \non opening folder this_folder\n    tell application \"Finder\"\n        activate\n        set the alert_message to the comment of this_folder\n        if the alert_message is not \"\" then\n            display dialog alert_message buttons {\"Open Comments\", \"Clear Comments\", \"OK\"} default button 3 giving up after dialog_timeout\n            set the user_choice to the button returned of the result\n            if the user_choice is \"Clear Comments\" then\n                set comment of this_folder to \"\"\n            else if the user_choice is \"Open Comments\" then\n                open information window of this_folder\n            end if\n        end if\n    end tell\nend opening folder\n```\n\n##### Special Considerations\n\nSpotlight was introduced in OS X v10.4. In prior versions of the Mac OS, the example script shown above works with the Comments field of the specified folder, rather than the Spotlight Comments field.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-SW52\"></a>\n\nremoving folder items from\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_924\"></a>A script handler that is invoked after items have been removed from its associated folder.\n\n##### Syntax\n\n|  |\n| --- |\n| ``` on removing folder items from alias after losing listOfAliasOrText  [ statement ]... end [ removing folder items from ]  ``` |\n\n##### Placeholders\n\n*alias*\n:   An `alias` that identifies the folder from which the items were removed.\n\n*listOfAliasOrText*\n:   List of aliases that identify the items lost (removed) from the folder. For permanently deleted items, only the names are provided (as `text` strings).\n\n*statement*\n:   Any AppleScript statement.\n\n<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_208\"></a>\n\n##### Examples\n\nThe following Folder Action handler is triggered when items are removed from the folder to which it is attached. It displays an alert containing the number of items removed.<a id=\"//apple_ref/doc/uid/TP40000983-CH219-DontLinkElementID_925\"></a>\n\n```\non removing folder items from this_folder after losing these_items\n    tell application \"Finder\"\n        set this_name to the name of this_folder\n    end tell\n    set the item_count to the count of these_items\n    display dialog (item_count as text) & \" items have been removed \" & \"from folder \\\\\"\" & this_name & \"\\\\\".\" buttons {\"OK\"} default button 1\nend removing folder items from\n```\n\n  \n\n---\n\nCopyright © 2016 Apple Inc. All Rights Reserved. [Terms of Use](http://www.apple.com/legal/internet-services/terms/site.html) | [Privacy Policy](http://www.apple.com/privacy/) | Updated: 2016-01-25\n",
  "binary": false,
  "source_url": "https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/reference/ASLR_folder_actions.html",
  "sha256": "1af6c0a40e60da744c781aaea1662c391ffb5f6a512461d7594e25465c177bfd",
  "etag": null,
  "last_modified": null
}
