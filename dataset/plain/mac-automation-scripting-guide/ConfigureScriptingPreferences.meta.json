{
  "collection": "mac-automation-scripting-guide",
  "path": "ConfigureScriptingPreferences.md",
  "title": "Configuring Scripting Preferences",
  "body": "<a id=\"//apple_ref/doc/uid/TP40016239-CH70\"></a><a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW1\"></a>\n\n## Configuring Scripting Preferences\n\nScript Editor preferences allows you to configure a variety of aspects of scripting behavior.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW10\"></a>\n\n### General Preferences\n\nIn the General pane of Script Editor preferences (Figure 9-1), you can configure settings such as the following.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW22\"></a>\n**Figure 9-1**General pane of Script Editor preferences\n![image: ../Art/script-editor_preferences_window_general_pane_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/script-editor_preferences_window_general_pane_2x.png)\n\n**Default Language**—The default scripting language when you create new Script Editor documents.\n\n**Show “tell” application menu**—This setting can be enabled to add a tell application menu to the navigation bar. Selecting an app in this menu allows you to direct script execution to the chosen app. In Figure 9-2, the tell application menu is set to the Finder. As a result, the script itself doesn’t need to include a `tell application \"Finder\"` statement. It automatically understands the Finder’s terminology and sends events to the Finder.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW23\"></a>\n**Figure 9-2**The tell application menu in a Script Editor document\n![image: ../Art/scripteditor_tellappmenu_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_tellappmenu_2x.png)\n\nIn addition, the current application object—which refers to the application currently executing the script—reflects the selected application, rather than Script Editor. See Listing 9-1 and Listing 9-2.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=name%20of%20current%20application)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW15\"></a>\n**Listing 9-1**AppleScript: Targeting the current application object after setting the tell application menu in Script Editor to Finder\n\n1. `name of current application`\n2. `--&gt; Result: \"Finder\"`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=Application.currentApplication%28%29.name%28%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW16\"></a>\n**Listing 9-2**JavaScript: Targeting the current application object after setting the tell application menu in Script Editor to Finder\n\n1. `Application.currentApplication().name()`\n2. `// Result: \"Finder\"`\n\n**Show inherited items**—This setting can be enabled to display inherited object properties in the dictionary viewer. For example, in the Finder, a `file` object inherits the attributes of an `item` object. Without this setting enabled, the dictionary entry for `file` simply provide a a pointer to the `item` entry to view the `item` attributes. See Figure 9-3. With this option enabled, the `file` entry in the Finder’s scripting dictionary includes the attributes of an `item`. See Figure 9-4.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW25\"></a>\n**Figure 9-3**Dictionary entry without inherited items\n![image: ../Art/scripteditor_dictionary_entrywithoutinheriteditems_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_dictionary_entrywithoutinheriteditems_2x.png)\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW24\"></a>\n**Figure 9-4**Dictionary entry with inherited items\n![image: ../Art/scripteditor_dictionary_entrywithinheriteditems_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_dictionary_entrywithinheriteditems_2x.png)\n\n**Script Menu**—These settings allow you to enable and configure a systemwide script menu (Figure 9-5). This menu can be used to organize your scripts and provide access to them in any app.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW26\"></a>\n**Figure 9-5**The systemwide script menu\n![image: ../Art/scriptmenu_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scriptmenu_2x.png)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW12\"></a>\n\n### Editing Preferences\n\nIn the Editing pane of Script Editor preferences, shown in Figure 9-6, you can configure settings such as the following.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW6\"></a>\n**Figure 9-6**Editing pane of Script Editor preferences\n![image: ../Art/script-editor_preferences_window_editing_pane_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/script-editor_preferences_window_editing_pane_2x.png)\n\n**Code completion**—When this option is enabled, Script Editor suggest code completions as you type a script (Figure 9-7).\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW2\"></a>\n**Figure 9-7**Code completion in Script Editor\n![image: ../Art/scripteditor_codecompletion1_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_codecompletion1_2x.png)\n\nTo accept and insert a code completion suggestion, press the F5 key or the Esc (Escape) key. If multiple code completion choices are available, a code completion dialog appears, allowing you to select a suggestion (see Figure 9-8).\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW3\"></a>\n**Figure 9-8**The code completion dialog in Script Editor\n![image: ../Art/scripteditor_codecompletion2_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_codecompletion2_2x.png)\n\n**Tab width and line wrapping**—Adjust how indentation and line wrapping occurs in the editor pane of Script Editor documents.\n\n**Escape tabs and line breaks in strings**—This setting only affects AppleScripts. When this option is disabled, tabs and line breaks appear normally in a text string, as shown in Figure 9-9.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW4\"></a>\n**Figure 9-9**A string containing normal tabs and line breaks\n![image: ../Art/scripteditor_nonescapedtabsandlinebreaks_example_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_nonescapedtabsandlinebreaks_example_2x.png)\n\nWhen this option is enabled, tabs and line breaks are replaced with escaped character equivalents—`/t` for a tab, and `/r` for a line break. See Figure 9-10.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW5\"></a>\n**Figure 9-10**A string containing escaped tabs and line breaks\n![image: ../Art/scripteditor_escapedtabsandlinebreaks_example_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/scripteditor_escapedtabsandlinebreaks_example_2x.png)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW11\"></a>\n\n### Formatting Preferences\n\nIn the Formatting pane of Script Editor window (Figure 9-11), you can configure the style—font, point size, and color—of various script attributes, including new text, language keywords, comments, and variables. Formatting options are language-specific. Select a language from the Language popup menu to view that language’s formatting settings.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW7\"></a>\n**Figure 9-11**Formatting pane of Script Editor preferences\n![image: ../Art/script-editor_preferences_window_formatting_pane_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/script-editor_preferences_window_formatting_pane_2x.png)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW13\"></a>\n\n### History Preferences\n\nIn the History pane of Script Editor preferences (Figure 9-12), you can enable or disable the log history, adjust the quantity of log history entries, and enable logging only when the log is visible.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW8\"></a>\n**Figure 9-12**History pane of Script Editor preferences\n![image: ../Art/script-editor_preferences_window_history_pane_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/script-editor_preferences_window_history_pane_2x.png)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW14\"></a>\n\n### Plug-ins Preferences\n\nThe Plug-ins pane of Script Editor preferences (Figure 9-13) lists any installed Script Editor plug-ins.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH70-SW9\"></a>\n**Figure 9-13**Plug-ins pane of Script Editor preferences\n![image: ../Art/script-editor_preferences_window_plugins_pane_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/script-editor_preferences_window_plugins_pane_2x.png)\n",
  "binary": false,
  "source_url": "https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/ConfigureScriptingPreferences.html",
  "sha256": "25f50fe997370e6073ffffa160d1380e71dbc02b483854fd1a1e2e68fb658d06",
  "etag": null,
  "last_modified": null
}
