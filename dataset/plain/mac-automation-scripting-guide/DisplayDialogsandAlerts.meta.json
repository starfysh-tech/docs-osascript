{
  "collection": "mac-automation-scripting-guide",
  "path": "DisplayDialogsandAlerts.md",
  "title": "Displaying Dialogs and Alerts",
  "body": "<a id=\"//apple_ref/doc/uid/TP40016239-CH15\"></a><a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW1\"></a>\n<a id=\"//apple_ref/doc/uid/TP40016239-CH60\"></a><a id=\"//apple_ref/doc/uid/TP40016239-CH60-SW1\"></a>\n\n## Displaying Dialogs and Alerts\n\nDialogs and alerts are great ways to provide information about a script’s progress, report problems, and allow users to make decisions that affect script behavior.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW2\"></a>\n\n### Displaying a Dialog\n\nUse the `display dialog` command, provided by the Standard Additions scripting addition to show a basic dialog message to the user, such as the one in Figure 22-1. This dialog was produced by the code in Listing 22-1 and Listing 22-2. In these examples, a string is passed to the `display dialog` command as a direct parameter. The result of the command is the button the user clicked in the dialog.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW11\"></a>\n**Figure 22-1**A simple dialog\n![image: ../Art/dialog_simple_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/dialog_simple_2x.png)\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=set%20theDialogText%20to%20%22The%20curent%20date%20and%20time%20is%20%22%20%26%20%28current%20date%29%20%26%20%22.%22%0Adisplay%20dialog%20theDialogText)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW12\"></a>\n**Listing 22-1**AppleScript: Displaying a simple dialog\n\n1. `set theDialogText to \"The curent date and time is \" & (current date) & \".\"`\n2. `display dialog theDialogText`\n3. `--&gt; Result: {button returned:\"OK\"}`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=var%20app%20%3D%20Application.currentApplication%28%29%0Aapp.includeStandardAdditions%20%3D%20true%0A%0Avar%20dialogText%20%3D%20%22The%20current%20date%20and%20time%20is%20%22%20%2B%20%28app.currentDate%28%29%29%0Aapp.displayDialog%28dialogText%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW13\"></a>\n**Listing 22-2**JavaScript: Displaying a simple dialog\n\n1. `var app = Application.currentApplication()`\n2. `app.includeStandardAdditions = true`\n4. `var dialogText = \"The current date and time is \" + (app.currentDate())`\n5. `app.displayDialog(dialogText)`\n6. `// Result: {\"buttonReturned\":\"OK\"}`\n\n> **Note**\n>\n>\n> This chapter covers a portion of the `display dialog` command’s capabilities. For example, the `display dialog` command can also be used to collect text entered by the user. This is covered in [Prompting for Text](https://developer.apple.com/library/archive/mac-automation-scripting-guide/PromptforText.md#//apple_ref/doc/uid/TP40016239-CH80-SW1). For complete information about the `display dialog` command and its parameters, launch Script Editor, open the Standard Additions scripting addition’s dictionary, and navigate to the command’s definition.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW5\"></a>\n\n### Customizing Dialog Buttons\n\nBy default, a dialog produced by the `display dialog` command has two buttons—Cancel and OK (the default). However, the command also has numerous optional parameters, some of which can be used to customize the buttons.\n\nUse the `buttons` parameter to provide a list of between one and three buttons. You can optionally use the `default button` parameter to configure one as the default—it’s highlighted and pressing the Return key activates it to close the dialog. You can also use the `cancel button` parameter to configure one as the cancel button—pressing Escape or Command-Period (.) activates it to close the dialog and produce a user cancelled error.\n\nThe dialog shown in Figure 22-2 has been customized to include Don’t Continue (the cancel button) and Continue (the default) buttons. This dialog was produced by the example code in Listing 22-3 and Listing 22-4.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW14\"></a>\n**Figure 22-2**A dialog with custom buttons\n![image: ../Art/dialog_customButtons_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/dialog_customButtons_2x.png)\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=set%20theDialogText%20to%20%22An%20error%20has%20occurred.%20Would%20you%20like%20to%20continue%3F%22%0Adisplay%20dialog%20theDialogText%20buttons%20%7B%22Don%27t%20Continue%22%2C%20%22Continue%22%7D%20default%20button%20%22Continue%22%20cancel%20button%20%22Don%27t%20Continue%22%0A)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW15\"></a>\n**Listing 22-3**AppleScript: Displaying a dialog with custom buttons\n\n1. `set theDialogText to \"An error has occurred. Would you like to continue?\"`\n2. `display dialog theDialogText buttons {\"Don't Continue\", \"Continue\"} default button \"Continue\" cancel button \"Don't Continue\"`\n3. `--&gt; Result: {{button returned:\"Continue\"}`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=var%20app%20%3D%20Application.currentApplication%28%29%0Aapp.includeStandardAdditions%20%3D%20true%0A%0A%0Avar%20dialogText%20%3D%20%22An%20error%20has%20occurred.%20Would%20you%20like%20to%20continue%3F%22%0Aapp.displayDialog%28dialogText%2C%20%7B%0A%20%20%20%20buttons%3A%20%5B%22Don%27t%20Continue%22%2C%20%22Continue%22%5D%2C%0A%20%20%20%20defaultButton%3A%20%22Continue%22%2C%0A%20%20%20%20cancelButton%3A%20%22Don%27t%20Continue%22%0A%7D%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW16\"></a>\n**Listing 22-4**JavaScript: Displaying a dialog with custom buttons\n\n1. `var app = Application.currentApplication()`\n2. `app.includeStandardAdditions = true`\n\n5. `var dialogText = \"An error has occurred. Would you like to continue?\"`\n6. `app.displayDialog(dialogText, {`\n7. ` buttons: [\"Don't Continue\", \"Continue\"],`\n8. ` defaultButton: \"Continue\",`\n9. ` cancelButton: \"Don't Continue\"`\n10. `})`\n11. `// Result: {\"buttonReturned\":\"Continue\"}`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW6\"></a>\n\n### Adding an Icon to a Dialog\n\nDialogs can also include an icon, providing users with a visual clue to their importance. You can direct the `display dialog` command to a specific icon by its file path, or resource name or ID if the icon is stored as a resource within your script’s bundle. You can also use the standard system icons `stop`, `note`, and `caution`. Listing 22-5 and Listing 22-6 display a dialog that includes the system caution icon like the one shown in Figure 22-3.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW19\"></a>\n**Figure 22-3**A dialog with an icon\n![image: ../Art/dialog_customIcon_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/dialog_customIcon_2x.png)\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=set%20theDialogText%20to%20%22The%20amount%20of%20available%20free%20space%20is%20dangerously%20low.%22%0Adisplay%20dialog%20theDialogText%20with%20icon%20caution)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW17\"></a>\n**Listing 22-5**AppleScript: Displaying a dialog with an icon\n\n1. `set theDialogText to \"The amount of available free space is dangerously low.\"`\n2. `display dialog theDialogText with icon caution`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=var%20app%20%3D%20Application.currentApplication%28%29%0Aapp.includeStandardAdditions%20%3D%20true%0A%0Avar%20dialogText%20%3D%20%22The%20amount%20of%20available%20free%20space%20is%20dangerously%20low.%22%0Aapp.displayDialog%28dialogText%2C%20%7BwithIcon%3A%20%22caution%22%7D%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW18\"></a>\n**Listing 22-6**JavaScript: Displaying a dialog with an icon\n\n1. `var app = Application.currentApplication()`\n2. `app.includeStandardAdditions = true`\n4. `var dialogText = \"The amount of available free space is dangerously low.\"`\n5. `app.displayDialog(dialogText, {withIcon: \"caution\"})`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW7\"></a>\n\n### Automatically Dismissing a Dialog\n\nSometimes, you may want to continue with script execution if a dialog isn’t dismissed by a user within a certain timeframe. In this case, you can specify an integer value for the `display dialog` command’s `giving up after` parameter, causing the dialog to *give up* and close automatically after a specified period of inactivity.\n\nListing 22-7 and Listing 22-8 display a dialog that automatically closes after five seconds of inactivity.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=display%20dialog%20%22Do%2C%20or%20do%20not.%20There%20is%20no%20try.%22%20giving%20up%20after%205)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW20\"></a>\n**Listing 22-7**AppleScript: Displaying a dialog that automatically dismisses after a period of inactivity\n\n1. `display dialog \"Do, or do not. There is no try.\" giving up after 5`\n2. `--&gt; Result: {button returned:\"OK\", gave up:true}`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=var%20app%20%3D%20Application.currentApplication%28%29%0Aapp.includeStandardAdditions%20%3D%20true%0A%0Avar%20dialogText%20%3D%20%22Do%2C%20or%20do%20not.%20There%20is%20no%20try.%22%0Aapp.displayDialog%28dialogText%2C%20%7BgivingUpAfter%3A%205%7D%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW21\"></a>\n**Listing 22-8**JavaScript: JavaScript a dialog that automatically dismisses after a period of inactivity\n\n1. `var app = Application.currentApplication()`\n2. `app.includeStandardAdditions = true`\n4. `var dialogText = \"Do, or do not. There is no try.\"`\n5. `app.displayDialog(dialogText, {givingUpAfter: 5})`\n6. `// Result: {\"buttonReturned\":\"OK\", \"gaveUp\":true}`\n\nWhen using the `giving up after` parameter, the result of the `display dialog` command includes a `gaveUp` property, a Boolean value indicating whether the dialog was auto-dismissed. This information is useful if you want the script to take a different course of action based on whether a dialog is manually or automatically dismissed.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW3\"></a>\n\n### Displaying an Alert\n\nThe `display alert` command is also provided by the Standard Additions scripting addition. It’s similar to the `display dialog` command, but with slightly different parameters. One of the `display alert` command’s optional parameters is `message`, which lets you provide additional text to display in a separate text field, below the bolded alert text. Listing 22-9 and Listing 22-10 show how to display the alert in Figure 22-4, which contains bolded alert text, plain message text, and custom buttons.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW22\"></a>\n**Figure 22-4**An alert\n![image: ../Art/alert_2x.png](https://developer.apple.com/library/archive/mac-automation-scripting-guide/Art/alert_2x.png)\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=set%20theAlertText%20to%20%22An%20error%20has%20occurred.%22%0Aset%20theAlertMessage%20to%20%22The%20amount%20of%20available%20free%20space%20is%20dangerously%20low.%20Would%20you%20like%20to%20continue%3F%22%0Adisplay%20alert%20theAlertText%20message%20theAlertMessage%20as%20critical%20buttons%20%7B%22Don%27t%20Continue%22%2C%20%22Continue%22%7D%20default%20button%20%22Continue%22%20cancel%20button%20%22Don%27t%20Continue%22%0A)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW9\"></a>\n**Listing 22-9**AppleScript: Displaying an alert with a message\n\n1. `set theAlertText to \"An error has occurred.\"`\n2. `set theAlertMessage to \"The amount of available free space is dangerously low. Would you like to continue?\"`\n3. `display alert theAlertText message theAlertMessage as critical buttons {\"Don't Continue\", \"Continue\"} default button \"Continue\" cancel button \"Don't Continue\"`\n4. `--&gt; Result: {button returned:\"Continue\"}`\n\n**JAVASCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=var%20app%20%3D%20Application.currentApplication%28%29%0Aapp.includeStandardAdditions%20%3D%20true%0A%0Avar%20alertText%20%3D%20%22An%20error%20has%20occurred.%22%0Avar%20alertMessage%20%3D%20%22The%20amount%20of%20available%20free%20space%20is%20dangerously%20low.%20Would%20you%20like%20to%20continue%3F%22%0Aapp.displayAlert%28alertText%2C%20%7B%0A%20%20%20%20message%3A%20alertMessage%2C%0A%20%20%20%20as%3A%20%22critical%22%2C%0A%20%20%20%20buttons%3A%20%5B%22Don%27t%20Continue%22%2C%20%22Continue%22%5D%2C%0A%20%20%20%20defaultButton%3A%20%22Continue%22%2C%0A%20%20%20%20cancelButton%3A%20%22Don%27t%20Continue%22%0A%7D%29)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH15-SW10\"></a>\n**Listing 22-10**JavaScript: Displaying an alert with a message\n\n1. `var app = Application.currentApplication()`\n2. `app.includeStandardAdditions = true`\n4. `var alertText = \"An error has occurred.\"`\n5. `var alertMessage = \"The amount of available free space is dangerously low. Would you like to continue?\"`\n6. `app.displayAlert(alertText, {`\n7. ` message: alertMessage,`\n8. ` as: \"critical\",`\n9. ` buttons: [\"Don't Continue\", \"Continue\"],`\n10. ` defaultButton: \"Continue\",`\n11. ` cancelButton: \"Don't Continue\"`\n12. `})`\n13. `// Result: {\"buttonReturned\":\"OK\"}`\n\n> **Note**\n>\n>\n> This chapter covers a portion of the `display alert` command’s capabilities. For complete information about the `display alert` command and its parameters, launch Script Editor, open the Standard Additions scripting addition’s dictionary, and navigate to the command’s definition.\n",
  "binary": false,
  "source_url": "https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/DisplayDialogsandAlerts.html",
  "sha256": "d65f05019a0919ddd5ed936bbc2ec69a83b7c59e94ed58a20263ceeef90dc4f1",
  "etag": null,
  "last_modified": null
}
