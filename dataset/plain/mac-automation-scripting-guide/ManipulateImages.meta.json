{
  "collection": "mac-automation-scripting-guide",
  "path": "ManipulateImages.md",
  "title": "Manipulating Images",
  "body": "<a id=\"//apple_ref/doc/uid/TP40016239-CH20\"></a><a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW1\"></a>\n\n## Manipulating Images\n\nImage Events is a scriptable background app in OS X that can be used to automate the manipulation of images without the need for a fully-featured image editor. You can use Image Events to:\n\n* Read image properties\n* Flip and rotate images\n* Crop and add padding to images\n* Resize images\n* Convert images from one type to another\n\nThe Image Events app is located in `/System/Library/CoreServices/`. You can access its dictionary from the Library palette in Script Editor. See [Opening a Scripting Dictionary](https://developer.apple.com/library/archive/mac-automation-scripting-guide/OpenaScriptingDictionary.md#//apple_ref/doc/uid/TP40016239-CH76-SW1).\n\n> **Note**\n>\n>\n> Image Events can read and save most standard image formats, including `.bmp`, `.jpg`, `.png`, `.psd`, and `.tif`. Image Events can read `.pdf` files, but cannot save them.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW11\"></a>\n\n### The Image Events Workflow\n\nTo manipulate an image with Image Events, a script typically performs the following sequential steps:\n\n1. Open the Image Events app.\n2. Open an image file.\n3. Access image properties or manipulate the image.\n4. Save the modified image as a new image file or overwriting the original image file.\n5. Close the image.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW12\"></a>\n\n### Opening an Image\n\nAn image must be opened before Image Events can interact with it. To open an image, use the `open` command and provide the image’s path, as shown in Listing 38-1.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Launch%20Image%20Events%20and%20open%20the%20image%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%20%20%20%20open%20theImageFile%0Aend%20tell%0A--%3E%20Result%3A%20image%20%22My%20Image.png%22%20of%20application%20%22Image%20Events%22)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW2\"></a>\n**Listing 38-1**AppleScript: Opening an image with Image Events\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Launch Image Events and open the image`\n5. `tell application \"Image Events\"`\n6. ` launch`\n7. ` open theImageFile`\n8. `end tell`\n9. `--&gt; Result: image \"My Image.png\" of application \"Image Events\"`\n\nThe result of the open command is an `image` object, the newly opened image. Since Image Events is a background app, opening an image produces no visible changes onscreen—you won’t actually *see* the opened image.\n\n> **Note**\n>\n>\n> When working with Image Events, use the `launch` command to make sure it’s running rather than the `activate` command, which is reserved for apps with interfaces.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW14\"></a>\n\n### Reading Image Properties\n\nLike all scriptable objects, images have attributes that define them, such as dimensions, color space, and resolution. The `image` class in the Image Events scripting dictionary contains a variety of properties for key attributes. Listing 38-2 shows how to access some of these properties. First, it retrieves a record of available properties for a selected image. Next, it retrieves some individual properties.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%0A%20%20%20%20--%20Read%20the%20image%27s%20properties%0A%20%20%20%20tell%20theImage%0A%20%20%20%20%20%20%20%20properties%0A%20%20%20%20%20%20%20%20--%3E%20%7Bcolor%20space%3ARGB%2C%20image%20file%3Afile%20%22Macintosh%20HD%3AUsers%3AYourUserName%3ADesktop%3AMy%20Image.png%22%20of%20application%20%22Image%20Events%22%2C%20bit%20depth%3Amillions%20of%20colors%2C%20dimensions%3A%7B293%2C%20252%7D%2C%20location%3Afolder%20%22Macintosh%20HD%3AUsers%3AYourUserName%3ADesktop%3A%22%20of%20application%20%22Image%20Events%22%2C%20embedded%20profile%3Aprofile%20%22Thunderbolt%20Display%22%20of%20image%20%22My%20Image.png%22%20of%20application%20%22Image%20Events%22%2C%20file%20type%3APNG%2C%20class%3Aimage%2C%20name%3A%22My%20Image.png%22%2C%20resolution%3A%7B72.0%2C%2072.0%7D%7D%0A%0A%20%20%20%20%20%20%20%20--%20Read%20the%20image%27s%20resolution%0A%20%20%20%20%20%20%20resolution%0A%20%20%20%20%20%20%20%20--%3E%20%7B72.0%2C%2072.0%7D%0A%0A%20%20%20%20%20%20%20%20--%20Read%20the%20image%27s%20type%0A%20%20%20%20%20%20%20file%20type%0A%20%20%20%20%20%20%20%20--%3E%20PNG%0A%0A%20%20%20%20%20%20%20%20--%20Read%20the%20name%20of%20the%20image%27s%20embedded%20profile%0A%20%20%20%20%20%20%20name%20of%20embedded%20profile%0A%20%20%20%20%20%20%20%20--%3E%20%22Thunderbolt%20Display%22%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW3\"></a>\n**Listing 38-2**AppleScript: Retrieving properties from an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Launch Image Events`\n5. `tell application \"Image Events\"`\n6. ` launch`\n8. ` -- Open the image`\n9. ` set theImage to open theImageFile`\n11. ` -- Read the image's properties`\n12. ` tell theImage`\n13. ` properties`\n14. ` --&gt; {color space:RGB, image file:file \"Macintosh HD:Users:YourUserName:Desktop:My Image.png\" of application \"Image Events\", bit depth:millions of colors, dimensions:{293, 252}, location:folder \"Macintosh HD:Users:YourUserName:Desktop:\" of application \"Image Events\", embedded profile:profile \"Thunderbolt Display\" of image \"My Image.png\" of application \"Image Events\", file type:PNG, class:image, name:\"My Image.png\", resolution:{72.0, 72.0}}`\n16. ` -- Read the image's resolution`\n17. ` resolution`\n18. ` --&gt; {72.0, 72.0}`\n20. ` -- Read the image's type`\n21. ` file type`\n22. ` --&gt; PNG`\n24. ` -- Read the name of the image's embedded profile`\n25. ` name of embedded profile`\n26. ` --&gt; \"Thunderbolt Display\"`\n27. ` end tell`\n28. `end tell`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW15\"></a>\n\n### Flipping an Image\n\nThe `flip` command reverses the axis of an image. It has two options for the required parameter: `horizontal` for changing the axis of the image on a horizontal plane, and `vertical` for changing the axis of the image on a vertical plane. Listing 38-3 flips an image both horizontally and vertically.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-DontLinkElementID_3\"></a>\n\n\nImportant\n\nThe script in Listing 38-3 saves a chosen image as a new file with a prefix of `temp-`. If another file exists with this same name, it is overwritten.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Determine%20a%20save%20name%20for%20the%20image%0A%20%20%20%20%20%20%20%20set%20theName%20to%20name%0A%20%20%20%20%20%20%20%20set%20theSaveName%20to%20%22temp-%22%20%26%20theName%0A%0A%20%20%20%20%20%20%20%20--%20Flip%20the%20image%20horizontally%0A%20%20%20%20%20%20%20%20flip%20with%20horizontal%0A%0A%20%20%20%20%20%20%20%20--%20Flip%20the%20image%20vertically%0A%20%20%20%20%20%20%20%20flip%20with%20vertical%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20to%20the%20output%20folder%2C%20using%20the%20save%20name%0A%20%20%20%20%20%20%20%20save%20as%20file%20type%20in%20%28theOutputFolder%20%26%20theSaveName%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW4\"></a>\n**Listing 38-3**AppleScript: Flipping an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Locate an output folder`\n5. `set theOutputFolder to (path to desktop folder as string)`\n7. `-- Launch Image Events`\n8. `tell application \"Image Events\"`\n9. ` launch`\n11. ` -- Open the image`\n12. ` set theImage to open theImageFile`\n13. ` tell theImage`\n15. ` -- Determine a save name for the image`\n16. ` set theName to name`\n17. ` set theSaveName to \"temp-\" & theName`\n19. ` -- Flip the image horizontally`\n20. ` flip with horizontal`\n22. ` -- Flip the image vertically`\n23. ` flip with vertical`\n25. ` -- Save the image to the output folder, using the save name`\n26. ` save as file type in (theOutputFolder & theSaveName)`\n28. ` -- Close the image`\n29. ` close`\n30. ` end tell`\n31. `end tell`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW16\"></a>\n\n### Rotating an Image\n\nThe `rotate` command rotates an image around its center point. To rotate an image clockwise, provide the command’s `to angle` parameter with an integer value between `1` to `359` (see Listing 38-4). To rotate an image counter-clockwise, provide a negative value, such as `-90`.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-DontLinkElementID_4\"></a>\n\n\nImportant\n\nThe script in Listing 38-4 saves a chosen image as a new file with a prefix of `temp-`. If another file exists with this same name, it is overwritten.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Determine%20a%20save%20name%20for%20the%20image%0A%20%20%20%20%20%20%20%20set%20theName%20to%20name%0A%20%20%20%20%20%20%20%20set%20theSaveName%20to%20%22temp-%22%20%26%20theName%0A%0A%20%20%20%20%20%20%20%20--%20Rotate%20an%20image%2045%20degrees%0A%20%20%20%20%20%20%20%20rotate%20to%20angle%2045%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20to%20the%20output%20folder%2C%20using%20the%20save%20name%0A%20%20%20%20%20%20%20%20save%20as%20file%20type%20in%20%28theOutputFolder%20%26%20theSaveName%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW8\"></a>\n**Listing 38-4**AppleScript: Rotating an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Locate an output folder`\n5. `set theOutputFolder to (path to desktop folder as string)`\n7. `-- Launch Image Events`\n8. `tell application \"Image Events\"`\n9. ` launch`\n11. ` -- Open the image`\n12. ` set theImage to open theImageFile`\n13. ` tell theImage`\n15. ` -- Determine a save name for the image`\n16. ` set theName to name`\n17. ` set theSaveName to \"temp-\" & theName`\n19. ` -- Rotate an image 45 degrees`\n20. ` rotate to angle 45`\n22. ` -- Save the image to the output folder, using the save name`\n23. ` save as file type in (theOutputFolder & theSaveName)`\n25. ` -- Close the image`\n26. ` close`\n27. ` end tell`\n28. `end tell`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW17\"></a>\n\n### Scaling an Image\n\nScaling an image proportionally increases or decreases its dimensions. The `scale` command can resize images in one of two ways:\n\n* To scale an image by percentage, provide a decimal value for the `by factor` parameter. The value `1` is equivalent to 100%. The value `.5` is 50%. The value `1.5` is 150% and so on.\n\n  Use the following formula to determine the scaling factor:\n\n  `«percentage» * .01`\n* To scale an image to a specific size, provide an integer value for the `to size` parameter. This value indicates the maximum number of pixels for the resized image on its longest side.\n\nScaling doesn’t change the resolution of an image. For example, a 72 dpi image that has been scaled to 50% of its original dimensions still has a resolution of 72 dpi.\n\nListing 38-5 demonstrates how to resize an image. It can scale by percentage or pixels, depending on the value of a Boolean variable.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-DontLinkElementID_5\"></a>\n\n\nImportant\n\nThe script in Listing 38-5 saves a chosen image as a new file with a prefix of `temp-`. If another file exists with this same name, it is overwritten.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20To%20scale%20by%20percentage%2C%20set%20this%20value%20to%20true.%20To%20scale%20to%20a%20specific%20size%2C%20set%20it%20to%20false.%0Aset%20scaleByPercentage%20to%20true%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Determine%20a%20save%20name%20for%20the%20image%0A%20%20%20%20%20%20%20%20set%20theName%20to%20name%0A%20%20%20%20%20%20%20%20set%20theSaveName%20to%20%22temp-%22%20%26%20theName%0A%0A%20%20%20%20%20%20%20%20--%20Scale%20the%20image%20by%2050%25%0A%20%20%20%20%20%20%20%20if%20scaleByPercentage%20%3D%20true%20then%0A%20%20%20%20%20%20%20%20%20%20%20%20scale%20by%20factor%200.5%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20--%20Scale%20the%20image%20to%20100px%20on%20its%20longese%20side%0A%20%20%20%20%20%20%20%20else%0A%20%20%20%20%20%20%20%20%20%20%20%20scale%20to%20size%20100%0A%20%20%20%20%20%20%20%20end%20if%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20to%20the%20output%20folder%2C%20using%20the%20save%20name%0A%20%20%20%20%20%20%20%20save%20as%20file%20type%20in%20%28theOutputFolder%20%26%20theSaveName%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW7\"></a>\n**Listing 38-5**AppleScript: Scaling an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Locate an output folder`\n5. `set theOutputFolder to (path to desktop folder as string)`\n7. `-- To scale by percentage, set this value to true. To scale to a specific size, set it to false.`\n8. `set scaleByPercentage to true`\n10. `-- Launch Image Events`\n11. `tell application \"Image Events\"`\n12. ` launch`\n14. ` -- Open the image`\n15. ` set theImage to open theImageFile`\n16. ` tell theImage`\n18. ` -- Determine a save name for the image`\n19. ` set theName to name`\n20. ` set theSaveName to \"temp-\" & theName`\n22. ` -- Scale the image by 50%`\n23. ` if scaleByPercentage = true then`\n24. ` scale by factor 0.5`\n26. ` -- Scale the image to 100px on its longese side`\n27. ` else`\n28. ` scale to size 100`\n29. ` end if`\n31. ` -- Save the image to the output folder, using the save name`\n32. ` save as file type in (theOutputFolder & theSaveName)`\n34. ` -- Close the image`\n35. ` close`\n36. ` end tell`\n37. `end tell`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW18\"></a>\n\n### Cropping an Image\n\nCropping an image removes pixels around all of its sides, centering the remaining area. The `to dimensions` required parameter takes a list of two integers: the new width and height, in pixels. In Listing 38-6, an image is cropped to 100 by 100 pixels.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-DontLinkElementID_6\"></a>\n\n\nImportant\n\nThe script in Listing 38-6 saves a chosen image as a new file with a prefix of `temp-`. If another file exists with this same name, it is overwritten.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Determine%20a%20save%20name%20for%20the%20image%0A%20%20%20%20%20%20%20%20set%20theName%20to%20name%0A%20%20%20%20%20%20%20%20set%20theSaveName%20to%20%22temp-%22%20%26%20theName%0A%0A%20%20%20%20%20%20%20%20--%20Crop%20the%20image%20to%20100px%20by%20100px%0A%20%20%20%20%20%20%20%20crop%20to%20dimensions%20%7B100%2C%20100%7D%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20to%20the%20output%20folder%2C%20using%20the%20save%20name%0A%20%20%20%20%20%20%20%20save%20as%20file%20type%20in%20%28theOutputFolder%20%26%20theSaveName%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW6\"></a>\n**Listing 38-6**AppleScript: Cropping an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Locate an output folder`\n5. `set theOutputFolder to (path to desktop folder as string)`\n7. `-- Launch Image Events`\n8. `tell application \"Image Events\"`\n9. ` launch`\n11. ` -- Open the image`\n12. ` set theImage to open theImageFile`\n13. ` tell theImage`\n15. ` -- Determine a save name for the image`\n16. ` set theName to name`\n17. ` set theSaveName to \"temp-\" & theName`\n19. ` -- Crop the image to 100px by 100px`\n20. ` crop to dimensions {100, 100}`\n22. ` -- Save the image to the output folder, using the save name`\n23. ` save as file type in (theOutputFolder & theSaveName)`\n25. ` -- Close the image`\n26. ` close`\n27. ` end tell`\n28. `end tell`\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW19\"></a>\n\n### Padding an Image\n\nPadding an image adds space around its sides. It’s essentially the reverse of cropping an image, although negative padding an image produces cropping. The `to dimensions` required parameter takes a list of two integers: the new width and height, in pixels. The optional `with pad color` parameter can be used to specify the color of the padding. In Listing 38-7, 20 pixels of padding is added around an image.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-DontLinkElementID_7\"></a>\n\n\nImportant\n\nThe script in Listing 38-7 saves a chosen image as a new file with a prefix of `temp-`. If another file exists with this same name, it is overwritten.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Prompt%20for%20a%20color%0Aset%20theColor%20to%20choose%20color%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Determine%20a%20save%20name%20for%20the%20image%0A%20%20%20%20%20%20%20%20set%20theName%20to%20name%0A%20%20%20%20%20%20%20%20set%20theSaveName%20to%20%22temp-%22%20%26%20theName%0A%0A%20%20%20%20%20%20%20%20--%20Get%20the%20current%20dimensions%20of%20the%20image%0A%20%20%20%20%20%20%20%20set%20%7BtheWidth%2C%20theHeight%7D%20to%20dimensions%0A%0A%20%20%20%20%20%20%20%20--%20Pad%20the%20image%20by%2020%20pixels%20on%20all%20sides%0A%20%20%20%20%20%20%20%20pad%20to%20dimensions%20%7BtheWidth%20%2B%2020%2C%20theHeight%20%2B%2020%7D%20with%20pad%20color%20theColor%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20to%20the%20output%20folder%2C%20using%20the%20save%20name%0A%20%20%20%20%20%20%20%20save%20as%20file%20type%20in%20%28theOutputFolder%20%26%20theSaveName%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW5\"></a>\n**Listing 38-7**AppleScript: Padding an image\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Prompt for a color`\n5. `set theColor to choose color`\n7. `-- Locate an output folder`\n8. `set theOutputFolder to (path to desktop folder as string)`\n10. `-- Launch Image Events`\n11. `tell application \"Image Events\"`\n12. ` launch`\n14. ` -- Open the image`\n15. ` set theImage to open theImageFile`\n16. ` tell theImage`\n18. ` -- Determine a save name for the image`\n19. ` set theName to name`\n20. ` set theSaveName to \"temp-\" & theName`\n22. ` -- Get the current dimensions of the image`\n23. ` set {theWidth, theHeight} to dimensions`\n25. ` -- Pad the image by 20 pixels on all sides`\n26. ` pad to dimensions {theWidth + 20, theHeight + 20} with pad color theColor`\n28. ` -- Save the image to the output folder, using the save name`\n29. ` save as file type in (theOutputFolder & theSaveName)`\n31. ` -- Close the image`\n32. ` close`\n33. ` end tell`\n34. `end tell`\n\n> **Note**\n>\n>\n> Images containing transparency result in transparent padding, regardless of whether a color is specified.\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW21\"></a>\n\n### Converting an Image from One Type to Another\n\nTo convert an image from one type to another, open it and save it in another format. Listing 38-8 saves a chosen image in `.jpg`, `.psd`, and `.tif` format.\n\n**APPLESCRIPT**\n\n[Open in Script Editor](https://developer.apple.com/library/archive/mac-automation-scripting-guide/applescript:/com.apple.scripteditor?action=new&script=--%20Prompt%20for%20an%20image%0Aset%20theImageFile%20to%20choose%20file%20of%20type%20%22public.image%22%20with%20prompt%20%22%22%0A%0A--%20Locate%20an%20output%20folder%0Aset%20theOutputFolder%20to%20%28path%20to%20desktop%20folder%20as%20string%29%0A%0A--%20Launch%20Image%20Events%0Atell%20application%20%22Image%20Events%22%0A%20%20%20%20launch%0A%0A%20%20%20%20--%20Open%20the%20image%0A%20%20%20%20set%20theImage%20to%20open%20theImageFile%0A%20%20%20%20tell%20theImage%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20as%20a%20.jpg%0A%20%20%20%20%20%20%20%20save%20as%20JPEG%20in%20%28theOutputFolder%20%26%20%22temp-conversion-output.jpg%22%29%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20as%20a%20.psd%0A%20%20%20%20%20%20%20%20save%20as%20PSD%20in%20%28theOutputFolder%20%26%20%22temp-conversion-output.psd%22%29%0A%0A%20%20%20%20%20%20%20%20--%20Save%20the%20image%20as%20a%20.tif%0A%20%20%20%20%20%20%20%20save%20as%20TIFF%20in%20%28theOutputFolder%20%26%20%22temp-conversion-output.tif%22%29%0A%0A%20%20%20%20%20%20%20%20--%20Close%20the%20image%0A%20%20%20%20%20%20%20%20close%0A%20%20%20%20end%20tell%0Aend%20tell)\n\n<a id=\"//apple_ref/doc/uid/TP40016239-CH20-SW9\"></a>\n**Listing 38-8**AppleScript: Converting an image from one type to another\n\n1. `-- Prompt for an image`\n2. `set theImageFile to choose file of type \"public.image\" with prompt \"\"`\n4. `-- Locate an output folder`\n5. `set theOutputFolder to (path to desktop folder as string)`\n7. `-- Launch Image Events`\n8. `tell application \"Image Events\"`\n9. ` launch`\n11. ` -- Open the image`\n12. ` set theImage to open theImageFile`\n13. ` tell theImage`\n15. ` -- Save the image as a .jpg`\n16. ` save as JPEG in (theOutputFolder & \"temp-conversion-output.jpg\")`\n18. ` -- Save the image as a .psd`\n19. ` save as PSD in (theOutputFolder & \"temp-conversion-output.psd\")`\n21. ` -- Save the image as a .tif`\n22. ` save as TIFF in (theOutputFolder & \"temp-conversion-output.tif\")`\n24. ` -- Close the image`\n25. ` close`\n26. ` end tell`\n27. `end tell`\n",
  "binary": false,
  "source_url": "https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/ManipulateImages.html",
  "sha256": "693f936abc7212c4b00053399723a090abf15d107f43d5f3277958802c7b8718",
  "etag": null,
  "last_modified": null
}
